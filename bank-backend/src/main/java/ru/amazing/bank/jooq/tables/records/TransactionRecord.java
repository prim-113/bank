/**
 * This class is generated by jOOQ
 */
package ru.amazing.bank.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.4"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransactionRecord extends org.jooq.impl.UpdatableRecordImpl<ru.amazing.bank.jooq.tables.records.TransactionRecord> implements org.jooq.Record4<java.lang.Integer, java.lang.Integer, java.sql.Date, java.lang.Integer> {

	private static final long serialVersionUID = 1282250767;

	/**
	 * Setter for <code>bank.transaction.id</code>.
	 */
	public void setId(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>bank.transaction.id</code>.
	 */
	public java.lang.Integer getId() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>bank.transaction.bankCard</code>.
	 */
	public void setBankcard(java.lang.Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>bank.transaction.bankCard</code>.
	 */
	public java.lang.Integer getBankcard() {
		return (java.lang.Integer) getValue(1);
	}

	/**
	 * Setter for <code>bank.transaction.transactionDate</code>.
	 */
	public void setTransactiondate(java.sql.Date value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>bank.transaction.transactionDate</code>.
	 */
	public java.sql.Date getTransactiondate() {
		return (java.sql.Date) getValue(2);
	}

	/**
	 * Setter for <code>bank.transaction.amount</code>.
	 */
	public void setAmount(java.lang.Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>bank.transaction.amount</code>.
	 */
	public java.lang.Integer getAmount() {
		return (java.lang.Integer) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row4<java.lang.Integer, java.lang.Integer, java.sql.Date, java.lang.Integer> fieldsRow() {
		return (org.jooq.Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row4<java.lang.Integer, java.lang.Integer, java.sql.Date, java.lang.Integer> valuesRow() {
		return (org.jooq.Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return ru.amazing.bank.jooq.tables.Transaction.TRANSACTION.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field2() {
		return ru.amazing.bank.jooq.tables.Transaction.TRANSACTION.BANKCARD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Date> field3() {
		return ru.amazing.bank.jooq.tables.Transaction.TRANSACTION.TRANSACTIONDATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field4() {
		return ru.amazing.bank.jooq.tables.Transaction.TRANSACTION.AMOUNT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value2() {
		return getBankcard();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Date value3() {
		return getTransactiondate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value4() {
		return getAmount();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TransactionRecord value1(java.lang.Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TransactionRecord value2(java.lang.Integer value) {
		setBankcard(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TransactionRecord value3(java.sql.Date value) {
		setTransactiondate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TransactionRecord value4(java.lang.Integer value) {
		setAmount(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TransactionRecord values(java.lang.Integer value1, java.lang.Integer value2, java.sql.Date value3, java.lang.Integer value4) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TransactionRecord
	 */
	public TransactionRecord() {
		super(ru.amazing.bank.jooq.tables.Transaction.TRANSACTION);
	}

	/**
	 * Create a detached, initialised TransactionRecord
	 */
	public TransactionRecord(java.lang.Integer id, java.lang.Integer bankcard, java.sql.Date transactiondate, java.lang.Integer amount) {
		super(ru.amazing.bank.jooq.tables.Transaction.TRANSACTION);

		setValue(0, id);
		setValue(1, bankcard);
		setValue(2, transactiondate);
		setValue(3, amount);
	}
}
