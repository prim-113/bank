/**
 * This class is generated by jOOQ
 */
package ru.amazing.bank.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.4"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonRecord extends org.jooq.impl.UpdatableRecordImpl<ru.amazing.bank.jooq.tables.records.PersonRecord> implements org.jooq.Record4<java.lang.Integer, java.lang.String, java.lang.String, java.lang.String> {

	private static final long serialVersionUID = 1051362593;

	/**
	 * Setter for <code>bank.person.id</code>.
	 */
	public void setId(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>bank.person.id</code>.
	 */
	public java.lang.Integer getId() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>bank.person.surname</code>.
	 */
	public void setSurname(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>bank.person.surname</code>.
	 */
	public java.lang.String getSurname() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>bank.person.name</code>.
	 */
	public void setName(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>bank.person.name</code>.
	 */
	public java.lang.String getName() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>bank.person.passwordNumber</code>.
	 */
	public void setPasswordnumber(java.lang.String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>bank.person.passwordNumber</code>.
	 */
	public java.lang.String getPasswordnumber() {
		return (java.lang.String) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row4<java.lang.Integer, java.lang.String, java.lang.String, java.lang.String> fieldsRow() {
		return (org.jooq.Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row4<java.lang.Integer, java.lang.String, java.lang.String, java.lang.String> valuesRow() {
		return (org.jooq.Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return ru.amazing.bank.jooq.tables.Person.PERSON.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return ru.amazing.bank.jooq.tables.Person.PERSON.SURNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return ru.amazing.bank.jooq.tables.Person.PERSON.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return ru.amazing.bank.jooq.tables.Person.PERSON.PASSWORDNUMBER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getSurname();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return getPasswordnumber();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonRecord value1(java.lang.Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonRecord value2(java.lang.String value) {
		setSurname(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonRecord value3(java.lang.String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonRecord value4(java.lang.String value) {
		setPasswordnumber(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonRecord values(java.lang.Integer value1, java.lang.String value2, java.lang.String value3, java.lang.String value4) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached PersonRecord
	 */
	public PersonRecord() {
		super(ru.amazing.bank.jooq.tables.Person.PERSON);
	}

	/**
	 * Create a detached, initialised PersonRecord
	 */
	public PersonRecord(java.lang.Integer id, java.lang.String surname, java.lang.String name, java.lang.String passwordnumber) {
		super(ru.amazing.bank.jooq.tables.Person.PERSON);

		setValue(0, id);
		setValue(1, surname);
		setValue(2, name);
		setValue(3, passwordnumber);
	}
}
