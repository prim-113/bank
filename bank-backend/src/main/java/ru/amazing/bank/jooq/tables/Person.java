/**
 * This class is generated by jOOQ
 */
package ru.amazing.bank.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.4"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Person extends org.jooq.impl.TableImpl<ru.amazing.bank.jooq.tables.records.PersonRecord> {

	private static final long serialVersionUID = -588756260;

	/**
	 * The reference instance of <code>bank.person</code>
	 */
	public static final ru.amazing.bank.jooq.tables.Person PERSON = new ru.amazing.bank.jooq.tables.Person();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<ru.amazing.bank.jooq.tables.records.PersonRecord> getRecordType() {
		return ru.amazing.bank.jooq.tables.records.PersonRecord.class;
	}

	/**
	 * The column <code>bank.person.id</code>.
	 */
	public final org.jooq.TableField<ru.amazing.bank.jooq.tables.records.PersonRecord, java.lang.Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>bank.person.surname</code>.
	 */
	public final org.jooq.TableField<ru.amazing.bank.jooq.tables.records.PersonRecord, java.lang.String> SURNAME = createField("surname", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), this, "");

	/**
	 * The column <code>bank.person.name</code>.
	 */
	public final org.jooq.TableField<ru.amazing.bank.jooq.tables.records.PersonRecord, java.lang.String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(15), this, "");

	/**
	 * The column <code>bank.person.passwordNumber</code>.
	 */
	public final org.jooq.TableField<ru.amazing.bank.jooq.tables.records.PersonRecord, java.lang.String> PASSWORDNUMBER = createField("passwordNumber", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "");

	/**
	 * Create a <code>bank.person</code> table reference
	 */
	public Person() {
		this("person", null);
	}

	/**
	 * Create an aliased <code>bank.person</code> table reference
	 */
	public Person(java.lang.String alias) {
		this(alias, ru.amazing.bank.jooq.tables.Person.PERSON);
	}

	private Person(java.lang.String alias, org.jooq.Table<ru.amazing.bank.jooq.tables.records.PersonRecord> aliased) {
		this(alias, aliased, null);
	}

	private Person(java.lang.String alias, org.jooq.Table<ru.amazing.bank.jooq.tables.records.PersonRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, ru.amazing.bank.jooq.Bank.BANK, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<ru.amazing.bank.jooq.tables.records.PersonRecord, java.lang.Integer> getIdentity() {
		return ru.amazing.bank.jooq.Keys.IDENTITY_PERSON;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<ru.amazing.bank.jooq.tables.records.PersonRecord> getPrimaryKey() {
		return ru.amazing.bank.jooq.Keys.KEY_PERSON_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<ru.amazing.bank.jooq.tables.records.PersonRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<ru.amazing.bank.jooq.tables.records.PersonRecord>>asList(ru.amazing.bank.jooq.Keys.KEY_PERSON_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ru.amazing.bank.jooq.tables.Person as(java.lang.String alias) {
		return new ru.amazing.bank.jooq.tables.Person(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ru.amazing.bank.jooq.tables.Person rename(java.lang.String name) {
		return new ru.amazing.bank.jooq.tables.Person(name, null);
	}
}
